{
  "pipelineConfig" : {
    "schemaVersion" : 6,
    "version" : 16,
    "pipelineId" : "TrainNLPModelPySparkLocal1211b4e5-b1ce-4a9a-8844-c4f4c4cf1ff5",
    "title" : "TrainNLPModel-PySpark",
    "description" : "",
    "uuid" : "badf47da-67e5-4dae-ab22-bc387ee92f29",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "BATCH"
    }, {
      "name" : "edgeHttpUrl",
      "value" : "http://localhost:18633"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "testOriginStage",
      "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
    }, {
      "name" : "startEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "stopEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "triggerInterval",
      "value" : 2000
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "ludicrousMode",
      "value" : false
    }, {
      "name" : "ludicrousModeInputCount",
      "value" : false
    }, {
      "name" : "advancedErrorHandling",
      "value" : false
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "badRecordsHandling",
      "value" : null
    }, {
      "name" : "errorRecordPolicy",
      "value" : "ORIGINAL_RECORD"
    }, {
      "name" : "workerCount",
      "value" : 0
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 2048
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "logLevel",
      "value" : "ERROR"
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 0
    }, {
      "name" : "maxRunners",
      "value" : 0
    }, {
      "name" : "shouldCreateFailureSnapshot",
      "value" : true
    }, {
      "name" : "runnerIdleTIme",
      "value" : 60
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    }, {
      "name" : "sparkConfigs",
      "value" : [ {
        "key" : "spark.driver.memory",
        "value" : "2G"
      }, {
        "key" : "spark.driver.cores",
        "value" : "1"
      }, {
        "key" : "spark.executor.memory",
        "value" : "2G"
      }, {
        "key" : "spark.executor.cores",
        "value" : "1"
      }, {
        "key" : "spark.dynamicAllocation.enabled",
        "value" : "true"
      }, {
        "key" : "spark.dynamicAllocation.minExecutors",
        "value" : "1"
      } ]
    }, {
      "name" : "clusterConfig.clusterType",
      "value" : "LOCAL"
    }, {
      "name" : "clusterConfig.sparkMasterUrl",
      "value" : "local[*]"
    }, {
      "name" : "clusterConfig.deployMode",
      "value" : "CLIENT"
    }, {
      "name" : "clusterConfig.hadoopUserName",
      "value" : null
    }, {
      "name" : "clusterConfig.sparkAppName",
      "value" : "${pipeline:title()}"
    }, {
      "name" : "clusterConfig.stagingDir",
      "value" : "/streamsets_preview"
    }, {
      "name" : "clusterConfig.useYarnKerberosKeytab",
      "value" : false
    }, {
      "name" : "clusterConfig.yarnKerberosKeytabSource",
      "value" : "PROPERTIES_FILE"
    }, {
      "name" : "clusterConfig.yarnKerberosKeytab",
      "value" : null
    }, {
      "name" : "clusterConfig.yarnKerberosPrincipal",
      "value" : "name@DOMAIN"
    }, {
      "name" : "databricksConfig.baseUrl",
      "value" : "https://centralus.azuredatabricks.net/"
    }, {
      "name" : "databricksConfig.credentialType",
      "value" : "TOKEN"
    }, {
      "name" : "databricksConfig.username",
      "value" : ""
    }, {
      "name" : "databricksConfig.password",
      "value" : ""
    }, {
      "name" : "databricksConfig.token",
      "value" : ""
    }, {
      "name" : "databricksConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "databricksConfig.clusterId",
      "value" : "1104-174505-lift224"
    }, {
      "name" : "databricksConfig.clusterConfig",
      "value" : "{\n    \"num_workers\": 8,\n    \"spark_version\": \"5.3.x-scala2.11\",\n    \"node_type_id\": \"i3.xlarge\"\n}"
    }, {
      "name" : "databricksConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "livyConfig.baseUrl",
      "value" : "https://40.122.43.59:31433/gateway/default/livy/v1/"
    }, {
      "name" : "livyConfig.username",
      "value" : ""
    }, {
      "name" : "livyConfig.password",
      "value" : ""
    }, {
      "name" : "amazonEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.accessKey",
      "value" : ""
    }, {
      "name" : "amazonEMRConfig.secretKey",
      "value" : ""
    }, {
      "name" : "amazonEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.enableEMRDebugging",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "amazonEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "preprocessScript",
      "value" : ""
    }, {
      "name" : "statsAggregatorStage",
      "value" : "streamsets-spark-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget::1"
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 120000,
        "writeToDestinations" : false,
        "executeLifecycleEvents" : false,
        "showHeader" : false,
        "showFieldType" : true,
        "rememberMe" : true,
        "endStage" : "Union_01",
        "clusterManagerType" : "CONFIGURED_CLUSTER"
      }
    },
    "fragments" : [ ],
    "stages" : [ {
      "instanceName" : "File_01",
      "library" : "streamsets-spark-file-lib",
      "stageName" : "com_streamsets_pipeline_spark_origin_fs_FileDOrigin",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "configBean.fileNamePattern",
        "value" : "positive_tweets.json"
      }, {
        "name" : "configBean.fileNameExcludePattern",
        "value" : null
      }, {
        "name" : "configBean.batchNumFileLimit",
        "value" : 1
      }, {
        "name" : "configBean.schemaConfigBean.schemaMode",
        "value" : "INFER"
      }, {
        "name" : "configBean.schemaConfigBean.customSchemaString",
        "value" : null
      }, {
        "name" : "configBean.schemaConfigBean.parseErrorMode",
        "value" : "PERMISSIVE"
      }, {
        "name" : "configBean.schemaConfigBean.columnNameOfCorruptRecord",
        "value" : null
      }, {
        "name" : "configBean.postProcessType",
        "value" : "NONE"
      }, {
        "name" : "configBean.archiveDir",
        "value" : null
      }, {
        "name" : "configBean.dataFormatConfig.csvHeader",
        "value" : true
      }, {
        "name" : "configBean.dataFormatConfig.csvDelimiter",
        "value" : ","
      }, {
        "name" : "configBean.dataFormatConfig.csvQuote",
        "value" : "\""
      }, {
        "name" : "configBean.dataFormatConfig.csvEscape",
        "value" : "\\"
      }, {
        "name" : "configBean.dataFormatConfig.rootTag",
        "value" : "ROWS"
      }, {
        "name" : "configBean.dataFormatConfig.rowTag",
        "value" : "ROW"
      }, {
        "name" : "configBean.dataFormatConfig.multiLineJson",
        "value" : false
      }, {
        "name" : "configBean.path",
        "value" : "/Users/dash/data/tweets/"
      }, {
        "name" : "configBean.dataFormat",
        "value" : "JSON"
      }, {
        "name" : "configBean.hdfsProperties",
        "value" : [ { } ]
      }, {
        "name" : "noReload",
        "value" : true
      }, {
        "name" : "cache",
        "value" : false
      }, {
        "name" : "skipOffsetTracking",
        "value" : false
      }, {
        "name" : "configBean.dataFormatConfig.avroIgnoreExtension",
        "value" : true
      }, {
        "name" : "configBean.dataFormatConfig.avroSchema",
        "value" : null
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "SOURCE",
        "icon" : "directory.png",
        "description" : "",
        "label" : "Positive Tweets",
        "xPos" : 60
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "File_01OutputLane15688789553580" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "File_03",
      "library" : "streamsets-spark-file-lib",
      "stageName" : "com_streamsets_pipeline_spark_origin_fs_FileDOrigin",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "configBean.fileNamePattern",
        "value" : "negative_tweets.json"
      }, {
        "name" : "configBean.fileNameExcludePattern",
        "value" : null
      }, {
        "name" : "configBean.batchNumFileLimit",
        "value" : 1
      }, {
        "name" : "configBean.schemaConfigBean.schemaMode",
        "value" : "INFER"
      }, {
        "name" : "configBean.schemaConfigBean.customSchemaString",
        "value" : null
      }, {
        "name" : "configBean.schemaConfigBean.parseErrorMode",
        "value" : "PERMISSIVE"
      }, {
        "name" : "configBean.schemaConfigBean.columnNameOfCorruptRecord",
        "value" : null
      }, {
        "name" : "configBean.postProcessType",
        "value" : "NONE"
      }, {
        "name" : "configBean.archiveDir",
        "value" : null
      }, {
        "name" : "configBean.dataFormatConfig.csvHeader",
        "value" : true
      }, {
        "name" : "configBean.dataFormatConfig.csvDelimiter",
        "value" : ","
      }, {
        "name" : "configBean.dataFormatConfig.csvQuote",
        "value" : "\""
      }, {
        "name" : "configBean.dataFormatConfig.csvEscape",
        "value" : "\\"
      }, {
        "name" : "configBean.dataFormatConfig.rootTag",
        "value" : "ROWS"
      }, {
        "name" : "configBean.dataFormatConfig.rowTag",
        "value" : "ROW"
      }, {
        "name" : "configBean.dataFormatConfig.multiLineJson",
        "value" : false
      }, {
        "name" : "configBean.path",
        "value" : "/Users/dash/data/tweets/"
      }, {
        "name" : "configBean.dataFormat",
        "value" : "JSON"
      }, {
        "name" : "configBean.hdfsProperties",
        "value" : [ { } ]
      }, {
        "name" : "noReload",
        "value" : true
      }, {
        "name" : "cache",
        "value" : false
      }, {
        "name" : "skipOffsetTracking",
        "value" : false
      }, {
        "name" : "configBean.dataFormatConfig.avroIgnoreExtension",
        "value" : true
      }, {
        "name" : "configBean.dataFormatConfig.avroSchema",
        "value" : null
      } ],
      "uiInfo" : {
        "yPos" : 200,
        "stageType" : "SOURCE",
        "icon" : "directory.png",
        "description" : "",
        "label" : "Negative Tweets",
        "xPos" : 60
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "File_03OutputLane15735118423870" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "FieldRemover_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_fieldfilter_FieldFilterDTransform",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "filterOperation",
        "value" : "KEEP"
      }, {
        "name" : "filterCriteria",
        "value" : "NAMED"
      }, {
        "name" : "fields",
        "value" : [ "id", "text" ]
      }, {
        "name" : "cache",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 52,
        "stageType" : "PROCESSOR",
        "icon" : "filter.png",
        "description" : "",
        "label" : "Keep Id & Tweet Text",
        "xPos" : 266
      },
      "inputLanes" : [ "File_01OutputLane15688789553580" ],
      "outputLanes" : [ "FieldRemover_01OutputLane15735146756460" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "SparkSQLExpression_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_evaluator_SQLEvaluatorDTransform",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "config.expressions",
        "value" : [ {
          "fieldName" : "label",
          "sqlExpression" : "1"
        } ]
      }, {
        "name" : "cache",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "expression.png",
        "description" : "",
        "label" : "Add Positive Label (1)",
        "xPos" : 480
      },
      "inputLanes" : [ "FieldRemover_01OutputLane15735146756460" ],
      "outputLanes" : [ "SparkSQLExpression_01OutputLane15735118965900" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "FieldRemover_02",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_fieldfilter_FieldFilterDTransform",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "filterOperation",
        "value" : "KEEP"
      }, {
        "name" : "filterCriteria",
        "value" : "NAMED"
      }, {
        "name" : "fields",
        "value" : [ "id", "text" ]
      }, {
        "name" : "cache",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 201,
        "stageType" : "PROCESSOR",
        "icon" : "filter.png",
        "description" : "",
        "label" : "Keep Id & Tweet Text",
        "xPos" : 265
      },
      "inputLanes" : [ "File_03OutputLane15735118423870" ],
      "outputLanes" : [ "FieldRemover_02OutputLane15735148001500" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "SparkSQLExpression_02",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_evaluator_SQLEvaluatorDTransform",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "config.expressions",
        "value" : [ {
          "fieldName" : "label",
          "sqlExpression" : "0"
        } ]
      }, {
        "name" : "cache",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 200,
        "stageType" : "PROCESSOR",
        "icon" : "expression.png",
        "description" : "",
        "label" : "Add Negative Label (0)",
        "xPos" : 480
      },
      "inputLanes" : [ "FieldRemover_02OutputLane15735148001500" ],
      "outputLanes" : [ "SparkSQLExpression_02OutputLane15735119468230" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "Union_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_union_UnionDTransform",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "conf.operationType",
        "value" : "UNION"
      }, {
        "name" : "cache",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 133.93930053710938,
        "stageType" : "PROCESSOR",
        "icon" : "union.png",
        "description" : "",
        "label" : "All Tweets For Model Training",
        "xPos" : 716.8657836914062
      },
      "inputLanes" : [ "SparkSQLExpression_01OutputLane15735118965900", "SparkSQLExpression_02OutputLane15735119468230" ],
      "outputLanes" : [ "Union_01OutputLane15735119699190" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "PySpark_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_py_PythonDTransform",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "code",
        "value" : "# Import required libraries\nfrom pyspark.ml.feature import OneHotEncoder, StringIndexer, VectorAssembler, StopWordsRemover, Tokenizer, CountVectorizer, IDF\nfrom pyspark.ml.linalg import Vectors\nfrom pyspark.ml import Pipeline, PipelineModel\nfrom pyspark.sql.functions import *\nfrom pyspark.ml.tuning import CrossValidator, ParamGridBuilder\nfrom pyspark.ml.evaluation import MulticlassClassificationEvaluator\nfrom pyspark.ml.classification import LogisticRegression\nfrom pyspark.sql.types import FloatType\n\n# Setup variables for convenience and readability \ntrainSplit = 0.8\ntestSplit = 0.2\nmaxIter = 10\nregParam = 0.3\nelasticNetParam = 0.8\nnumberOfCVFolds = 3\n\n# The input dataframe is accessbile via inputs[0]\ndf = inputs[0]\n\n# Split dataset into \"train\" and \"test\" sets\n(train, test) = df.randomSplit([trainSplit, testSplit], 42) \n\ntokenizer = Tokenizer(inputCol=\"text\",outputCol=\"tokenized\")\nstopWordsRemover = StopWordsRemover(inputCol=tokenizer.getOutputCol(),outputCol=\"stopWordsRemoved\")\ncountVectorizer = CountVectorizer(inputCol=stopWordsRemover.getOutputCol(),outputCol=\"countVectorized\")\nidf = IDF(inputCol=countVectorizer.getOutputCol(),outputCol=\"inverted\")\n\n# MUST for Spark features\nassembler = VectorAssembler(inputCols=[idf.getOutputCol()], outputCol=\"features\")\n\n# LogisticRegression Model\nlr = LogisticRegression(maxIter=maxIter, regParam=regParam, elasticNetParam=elasticNetParam)\n\n# Setup pipeline -- pay attention to the order -- it matters!\npipeline = Pipeline(stages=[tokenizer, stopWordsRemover, countVectorizer, idf, assembler, lr])\n\n# Setup evaluator -- default is F1 score\nclassEvaluator = MulticlassClassificationEvaluator(metricName=\"accuracy\")\n\n# Setup hyperparams grid\nparamGrid = ParamGridBuilder().addGrid(lr.elasticNetParam,[0.0]).addGrid(countVectorizer.vocabSize,[5000]).build()\n\n# Setup cross validator\ncv = CrossValidator(estimator=pipeline, estimatorParamMaps=paramGrid, evaluator=classEvaluator, numFolds=numberOfCVFolds) \n\n# Fit model on \"train\" set\ncvModel = cv.fit(train)\n\n# Get the best model based on CrossValidator\nmodel = cvModel.bestModel\n\n# Run inference on \"test\" set\npredictions = model.transform(test)\n\n# Return accuray as output dataframe\naccuracy = classEvaluator.evaluate(predictions)\noutput = spark.createDataFrame([accuracy], FloatType()).withColumnRenamed(\"value\",\"Accuracy\")"
      } ],
      "uiInfo" : {
        "yPos" : 134,
        "stageType" : "PROCESSOR",
        "icon" : "python.png",
        "description" : "",
        "label" : "Train NLP Model",
        "xPos" : 964
      },
      "inputLanes" : [ "Union_01OutputLane15735119699190" ],
      "outputLanes" : [ "PySpark_01OutputLane15688928231760" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "File_02",
      "library" : "streamsets-spark-file-lib",
      "stageName" : "com_streamsets_pipeline_spark_destination_fs_FileWriterDDestination",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "configBean.writeMode",
        "value" : "APPEND"
      }, {
        "name" : "configBean.fieldToWrite",
        "value" : null
      }, {
        "name" : "configBean.partitionByColumns",
        "value" : [ ]
      }, {
        "name" : "configBean.filterUnrelatedScdMasterRecords",
        "value" : false
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvHeader",
        "value" : true
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvDelimiter",
        "value" : ","
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvQuote",
        "value" : "\""
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvEscape",
        "value" : "\\"
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.rootTag",
        "value" : "ROWS"
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.rowTag",
        "value" : "ROW"
      }, {
        "name" : "configBean.path",
        "value" : "/Users/dash/temp/"
      }, {
        "name" : "configBean.dataFormat",
        "value" : "CSV"
      }, {
        "name" : "configBean.hdfsProperties",
        "value" : [ { } ]
      } ],
      "uiInfo" : {
        "yPos" : 134,
        "stageType" : "TARGET",
        "icon" : "directory.png",
        "description" : "",
        "label" : "Capture Accuracy",
        "xPos" : 1204
      },
      "inputLanes" : [ "PySpark_01OutputLane15688928231760" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "errorStage" : null,
    "info" : {
      "pipelineId" : "TrainNLPModelPySparkLocal1211b4e5-b1ce-4a9a-8844-c4f4c4cf1ff5",
      "title" : "TrainNLPModel-PySpark",
      "description" : "",
      "created" : 1575995374909,
      "lastModified" : 1575995505171,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "badf47da-67e5-4dae-ab22-bc387ee92f29",
      "valid" : true,
      "metadata" : {
        "labels" : [ ],
        "dpm.base.url" : "https://trailer.streamsetscloud.com",
        "dpm.pipeline.id" : "6402f097-fd91-452d-ae35-69fa025ae2f2:iamontheinet",
        "dpm.pipeline.commit.id" : "0728d146-ce0c-4c50-966f-ae3f861e4d2d:iamontheinet",
        "dpm.pipeline.rules.id" : "e41ad04c-1a54-4442-a91c-3ef719edde0b:iamontheinet",
        "dpm.pipeline.version" : "1"
      },
      "name" : "TrainNLPModelPySparkLocal1211b4e5-b1ce-4a9a-8844-c4f4c4cf1ff5",
      "sdcVersion" : "3.13.0-SNAPSHOT",
      "sdcId" : "19dc6973-1b6a-11ea-ab34-ff75b4db970c"
    },
    "metadata" : {
      "labels" : [ ],
      "dpm.base.url" : "https://trailer.streamsetscloud.com",
      "dpm.pipeline.id" : "6402f097-fd91-452d-ae35-69fa025ae2f2:iamontheinet",
      "dpm.pipeline.commit.id" : "0728d146-ce0c-4c50-966f-ae3f861e4d2d:iamontheinet",
      "dpm.pipeline.rules.id" : "e41ad04c-1a54-4442-a91c-3ef719edde0b:iamontheinet",
      "dpm.pipeline.version" : "1"
    },
    "statsAggregatorStage" : {
      "instanceName" : "WritetoControlHubdirectly_ErrorStage",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "outputStreamLabels" : null,
        "yPos" : 50,
        "stageType" : "TARGET",
        "rawSource" : null,
        "icon" : "",
        "description" : "",
        "inputStreamLabels" : null,
        "label" : "Error Records - Write to Control Hub directly",
        "xPos" : 1424
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "startEventStages" : [ ],
    "stopEventStages" : [ ],
    "testOriginStage" : null,
    "issues" : {
      "pipelineIssues" : [ ],
      "stageIssues" : { },
      "issueCount" : 0
    },
    "previewable" : true,
    "valid" : true
  },
  "pipelineRules" : {
    "schemaVersion" : 3,
    "version" : 2,
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Error Records",
      "metricId" : "pipeline.batchErrorRecords.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1568878773003,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Stage Errors",
      "metricId" : "pipeline.batchErrorMessages.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1568878773003,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1568878773003,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1568878773003,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "uuid" : "6ec96ac8-e88e-4a1c-b9a1-2523a0aaed60",
    "configuration" : [ {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    } ],
    "ruleIssues" : [ ],
    "configIssues" : [ ]
  },
  "libraryDefinitions" : null
}