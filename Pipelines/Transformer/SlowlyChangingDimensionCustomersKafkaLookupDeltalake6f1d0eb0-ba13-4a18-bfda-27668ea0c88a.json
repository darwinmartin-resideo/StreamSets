{
  "pipelineConfig" : {
    "schemaVersion" : 6,
    "version" : 16,
    "pipelineId" : "SlowlyChangingDimensionCustomersKafkaLookupDeltalake6f1d0eb0-ba13-4a18-bfda-27668ea0c88a",
    "title" : "SlowlyChangingDimensionCustomers-Kafka-Lookup-Deltalake",
    "description" : "",
    "uuid" : "8a41cac3-4e35-423c-b645-9e84e6d9cdec",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STREAMING"
    }, {
      "name" : "edgeHttpUrl",
      "value" : "http://localhost:18633"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "testOriginStage",
      "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
    }, {
      "name" : "startEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "stopEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "triggerInterval",
      "value" : 2000
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "ludicrousMode",
      "value" : false
    }, {
      "name" : "ludicrousModeInputCount",
      "value" : false
    }, {
      "name" : "advancedErrorHandling",
      "value" : false
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "badRecordsHandling",
      "value" : null
    }, {
      "name" : "errorRecordPolicy",
      "value" : "ORIGINAL_RECORD"
    }, {
      "name" : "workerCount",
      "value" : 0
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 2048
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "logLevel",
      "value" : "TRACE"
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 0
    }, {
      "name" : "maxRunners",
      "value" : 0
    }, {
      "name" : "shouldCreateFailureSnapshot",
      "value" : true
    }, {
      "name" : "runnerIdleTIme",
      "value" : 60
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    }, {
      "name" : "sparkConfigs",
      "value" : [ {
        "key" : "spark.driver.memory",
        "value" : "2G"
      }, {
        "key" : "spark.driver.cores",
        "value" : "1"
      }, {
        "key" : "spark.executor.memory",
        "value" : "2G"
      }, {
        "key" : "spark.executor.cores",
        "value" : "1"
      }, {
        "key" : "spark.dynamicAllocation.enabled",
        "value" : "true"
      }, {
        "key" : "spark.dynamicAllocation.minExecutors",
        "value" : "1"
      } ]
    }, {
      "name" : "preprocessScript",
      "value" : "/*\nThe following script define a method\nthat increments an integer by 1 \nand registers it as a UDF with \nthe SparkSession, which can be accessed\nusing the variable named \"spark\":\ndef inc(i: Integer): Integer = {\n  i + 1\n}\nspark.udf.register (\"inc\", inc _)\n\n*/"
    }, {
      "name" : "clusterConfig.clusterType",
      "value" : "DATABRICKS"
    }, {
      "name" : "clusterConfig.sparkMasterUrl",
      "value" : "local[*]"
    }, {
      "name" : "clusterConfig.deployMode",
      "value" : "CLIENT"
    }, {
      "name" : "clusterConfig.hadoopUserName",
      "value" : null
    }, {
      "name" : "clusterConfig.sparkAppName",
      "value" : "${pipeline:title()}"
    }, {
      "name" : "clusterConfig.stagingDir",
      "value" : "/streamsets"
    }, {
      "name" : "clusterConfig.useYarnKerberosKeytab",
      "value" : false
    }, {
      "name" : "clusterConfig.yarnKerberosKeytabSource",
      "value" : "PROPERTIES_FILE"
    }, {
      "name" : "clusterConfig.yarnKerberosKeytab",
      "value" : null
    }, {
      "name" : "clusterConfig.yarnKerberosPrincipal",
      "value" : "name@DOMAIN"
    }, {
      "name" : "databricksConfig.baseUrl",
      "value" : "https://dbc-58107af9-cc2b.cloud.databricks.com"
    }, {
      "name" : "databricksConfig.credentialType",
      "value" : "TOKEN"
    }, {
      "name" : "databricksConfig.username",
      "value" : null
    }, {
      "name" : "databricksConfig.password",
      "value" : null
    }, {
      "name" : "databricksConfig.token",
      "value" : "dapie59d7245d87c6e96da11a8ea5e4d3aa3"
    }, {
      "name" : "databricksConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "databricksConfig.clusterId",
      "value" : "1001-183617-harm779"
    }, {
      "name" : "databricksConfig.clusterConfig",
      "value" : "{\n    \"num_workers\": 8,\n    \"spark_version\": \"5.3.x-scala2.11\",\n    \"node_type_id\": \"i3.xlarge\"\n}"
    }, {
      "name" : "databricksConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "livyConfig.baseUrl",
      "value" : "https://localhost:30443/gateway/default/livy/v1/"
    }, {
      "name" : "livyConfig.username",
      "value" : null
    }, {
      "name" : "livyConfig.password",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.accessKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.secretKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.enableEMRDebugging",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "amazonEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "statsAggregatorStage",
      "value" : ""
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 120000,
        "writeToDestinations" : false,
        "executeLifecycleEvents" : false,
        "showHeader" : false,
        "showFieldType" : true,
        "rememberMe" : true,
        "endStage" : ""
      }
    },
    "fragments" : [ ],
    "stages" : [ {
      "instanceName" : "Kafka_01",
      "library" : "streamsets-spark-kafka-no-dependency-lib",
      "stageName" : "com_streamsets_pipeline_spark_origin_kafka_KafkaDOrigin",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "configBean.bootstrapServers",
        "value" : "localhost:9092"
      }, {
        "name" : "configBean.usePattern",
        "value" : false
      }, {
        "name" : "configBean.topicPattern",
        "value" : null
      }, {
        "name" : "configBean.topics",
        "value" : [ "topic1" ]
      }, {
        "name" : "configBean.startingOffset",
        "value" : "LATEST"
      }, {
        "name" : "configBean.customStartingOffsets",
        "value" : [ {
          "partition" : [ ]
        } ]
      }, {
        "name" : "configBean.maxMessages",
        "value" : 10000
      }, {
        "name" : "configBean.extraConfigs",
        "value" : [ ]
      }, {
        "name" : "configBean.dataFormat",
        "value" : "CSV"
      }, {
        "name" : "configBean.schemaConfigBean.schemaMode",
        "value" : "INFER"
      }, {
        "name" : "configBean.schemaConfigBean.customSchemaString",
        "value" : null
      }, {
        "name" : "configBean.schemaConfigBean.parseErrorMode",
        "value" : "PERMISSIVE"
      }, {
        "name" : "configBean.schemaConfigBean.columnNameOfCorruptRecord",
        "value" : null
      }, {
        "name" : "configBean.avroSchemaConfigBean.avroSchemaSource",
        "value" : null
      }, {
        "name" : "configBean.avroSchemaConfigBean.avroSchema",
        "value" : null
      }, {
        "name" : "configBean.avroSchemaConfigBean.schemaRegistryUrlsForRegistration",
        "value" : [ ]
      }, {
        "name" : "configBean.avroSchemaConfigBean.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "configBean.avroSchemaConfigBean.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "configBean.avroSchemaConfigBean.subject",
        "value" : null
      }, {
        "name" : "configBean.avroSchemaConfigBean.subjectToRegister",
        "value" : null
      }, {
        "name" : "configBean.avroSchemaConfigBean.schemaId",
        "value" : null
      }, {
        "name" : "configBean.securityConfigBean.securityOption",
        "value" : "PLAINTEXT"
      }, {
        "name" : "configBean.securityConfigBean.kerberosServiceName",
        "value" : null
      }, {
        "name" : "configBean.securityConfigBean.truststoreLocation",
        "value" : null
      }, {
        "name" : "configBean.securityConfigBean.truststorePassword",
        "value" : null
      }, {
        "name" : "configBean.securityConfigBean.keystoreLocation",
        "value" : null
      }, {
        "name" : "configBean.securityConfigBean.keystorePassword",
        "value" : null
      }, {
        "name" : "noReload",
        "value" : false
      }, {
        "name" : "cache",
        "value" : false
      }, {
        "name" : "skipOffsetTracking",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 123,
        "stageType" : "SOURCE",
        "icon" : "kafka.png",
        "description" : "",
        "label" : "Customer Updates",
        "xPos" : 49
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "Kafka_01OutputLane15700325050790" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "JDBCLookup_01",
      "library" : "streamsets-spark-jdbc-lib",
      "stageName" : "com_streamsets_pipeline_spark_processor_jdbc_JDBCDLookupProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "conf.columnsToRetrieve",
        "value" : [ "customer_id", "version" ]
      }, {
        "name" : "conf.addPrefix",
        "value" : false
      }, {
        "name" : "conf.prefix",
        "value" : "lookup_"
      }, {
        "name" : "conf.noReload",
        "value" : false
      }, {
        "name" : "conf.cache",
        "value" : false
      }, {
        "name" : "jdbcConnectionConfig.jdbcUrl",
        "value" : "jdbc:mysql://dash-retail.c9v0wdsbqa7e.us-west-2.rds.amazonaws.com:3306/retail"
      }, {
        "name" : "jdbcConnectionConfig.useCredential",
        "value" : true
      }, {
        "name" : "jdbcConnectionConfig.username",
        "value" : "dash"
      }, {
        "name" : "jdbcConnectionConfig.password",
        "value" : "Dishdash123!"
      }, {
        "name" : "jdbcConnectionConfig.jdbcProperties",
        "value" : [ { } ]
      }, {
        "name" : "jdbcConnectionConfig.driverConfig",
        "value" : "AUTO_DETECT"
      }, {
        "name" : "jdbcConnectionConfig.driverClassName",
        "value" : null
      }, {
        "name" : "jdbcTableConfig.schema",
        "value" : null
      }, {
        "name" : "jdbcTableConfig.table",
        "value" : "customers"
      }, {
        "name" : "conf.lookupBehavior",
        "value" : "RETURN_ONE"
      }, {
        "name" : "conf.keyColumns",
        "value" : [ {
          "fieldName" : "customer_id",
          "operator" : "="
        } ]
      }, {
        "name" : "conf.returnColumn",
        "value" : null
      }, {
        "name" : "conf.sortOptions",
        "value" : [ ]
      }, {
        "name" : "conf.maxRows",
        "value" : 1000
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "rdbms.png",
        "description" : "",
        "label" : "JDBC Lookup",
        "xPos" : 280
      },
      "inputLanes" : [ "Kafka_01OutputLane15700325050790" ],
      "outputLanes" : [ "JDBCLookup_01OutputLane15699644410700" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "Sort_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_sort_SortDTransform",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "configs",
        "value" : [ {
          "order" : "ASC",
          "col" : "customer_id"
        } ]
      }, {
        "name" : "sortWithinPartitions",
        "value" : false
      }, {
        "name" : "cache",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 200,
        "stageType" : "PROCESSOR",
        "icon" : "sort.png",
        "description" : "",
        "label" : "Sort By Customer Id",
        "xPos" : 280
      },
      "inputLanes" : [ "Kafka_01OutputLane15700325050790" ],
      "outputLanes" : [ "Sort_01OutputLane15692669889200" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "SlowlyChangingDimension_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_processor_scd_SCDDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "conf.scdType",
        "value" : "TYPE_2"
      }, {
        "name" : "conf.outputFullMasterData",
        "value" : false
      }, {
        "name" : "conf.copyNullsFromOriginal",
        "value" : true
      }, {
        "name" : "conf.extraColumnMode",
        "value" : "DROP"
      }, {
        "name" : "conf.naturalKeyColumns",
        "value" : [ "customer_id" ]
      }, {
        "name" : "conf.managedColumnConfigs",
        "value" : [ {
          "managedColumnType" : "VERSION_INCREMENT",
          "managedColumnName" : "version"
        } ]
      }, {
        "name" : "conf.timestampBasis",
        "value" : "CALCULATE_NOW"
      }, {
        "name" : "conf.timestampBasisField",
        "value" : null
      }, {
        "name" : "conf.type2ForAllChanges",
        "value" : true
      }, {
        "name" : "conf.type2IncludeFields",
        "value" : [ ]
      }, {
        "name" : "conf.type2ExcludeFields",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 180,
        "stageType" : "PROCESSOR",
        "icon" : "iconfinder_Hosting-19_2106411.png",
        "description" : "",
        "inputStreamLabels" : [ "Master Data", "Change Input" ],
        "label" : "Slowly Changing Dimension",
        "xPos" : 500
      },
      "inputLanes" : [ "JDBCLookup_01OutputLane15699644410700", "Sort_01OutputLane15692669889200" ],
      "outputLanes" : [ "SlowlyChangingDimension_01OutputLane15677977380220" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "TypeConverter_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_typeconvert_TypeConvertDTransform",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "conf.conversions",
        "value" : [ {
          "fieldName" : "customer_zipcode",
          "targetType" : "STRING"
        } ]
      }, {
        "name" : "cache",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "converter.png",
        "description" : "",
        "label" : "Type Converter",
        "xPos" : 720
      },
      "inputLanes" : [ "SlowlyChangingDimension_01OutputLane15677977380220" ],
      "outputLanes" : [ "TypeConverter_01OutputLane15699673782780" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "DeltaLake_01",
      "library" : "streamsets-spark-delta-lake-with-no-dependency-lib",
      "stageName" : "com_streamsets_pipeline_spark_destination_delta_DeltaLakeDDestination",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "conf.deltaLakeTable",
        "value" : "/DeltaLake/customers"
      }, {
        "name" : "conf.partitionColumns",
        "value" : [ ]
      }, {
        "name" : "conf.writeMode",
        "value" : "APPEND"
      }, {
        "name" : "conf.mergeSchema",
        "value" : true
      }, {
        "name" : "conf.updateSchema",
        "value" : "NO"
      }, {
        "name" : "conf.replaceWhere",
        "value" : null
      }, {
        "name" : "conf.hdfsProperties",
        "value" : [ { } ]
      }, {
        "name" : "conf.storageSystem",
        "value" : "HDFS"
      }, {
        "name" : "conf.storageConf.credentialMode",
        "value" : "WITH_CREDENTIALS"
      }, {
        "name" : "conf.storageConf.awsAccessKeyId",
        "value" : null
      }, {
        "name" : "conf.storageConf.awsSecretAccessKey",
        "value" : null
      }, {
        "name" : "conf.storageConf.clientId",
        "value" : null
      }, {
        "name" : "conf.storageConf.credential",
        "value" : null
      }, {
        "name" : "conf.storageConf.refreshUrl",
        "value" : null
      }, {
        "name" : "conf.updateSetRules",
        "value" : [ ]
      }, {
        "name" : "conf.updateWhere",
        "value" : ""
      }, {
        "name" : "conf.deleteWhere",
        "value" : ""
      }, {
        "name" : "conf.mergeWhere",
        "value" : ""
      }, {
        "name" : "conf.mergeClauses",
        "value" : [ ]
      }, {
        "name" : "conf.createTable",
        "value" : null
      }, {
        "name" : "conf.tableName",
        "value" : null
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "TARGET",
        "icon" : "delta.png",
        "description" : "",
        "label" : "Databricks Delta Lake",
        "xPos" : 940
      },
      "inputLanes" : [ "TypeConverter_01OutputLane15699673782780" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "errorStage" : null,
    "info" : {
      "pipelineId" : "SlowlyChangingDimensionCustomersKafkaLookupDeltalake6f1d0eb0-ba13-4a18-bfda-27668ea0c88a",
      "title" : "SlowlyChangingDimensionCustomers-Kafka-Lookup-Deltalake",
      "description" : "",
      "created" : 1570467020946,
      "lastModified" : 1570467020957,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "8a41cac3-4e35-423c-b645-9e84e6d9cdec",
      "valid" : true,
      "metadata" : {
        "labels" : [ ]
      },
      "name" : "SlowlyChangingDimensionCustomersKafkaLookupDeltalake6f1d0eb0-ba13-4a18-bfda-27668ea0c88a",
      "sdcVersion" : "3.12.0-SNAPSHOT",
      "sdcId" : "32664848-e7c8-11e9-8e5c-bd27fc4173b1"
    },
    "metadata" : {
      "labels" : [ ]
    },
    "statsAggregatorStage" : null,
    "startEventStages" : [ ],
    "stopEventStages" : [ ],
    "testOriginStage" : null,
    "valid" : true,
    "issues" : {
      "pipelineIssues" : [ ],
      "stageIssues" : { },
      "issueCount" : 0
    },
    "previewable" : false
  },
  "pipelineRules" : {
    "schemaVersion" : 3,
    "version" : 2,
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Error Records",
      "metricId" : "pipeline.batchErrorRecords.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1567795854891,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Stage Errors",
      "metricId" : "pipeline.batchErrorMessages.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1567795854891,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1567795854891,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1567795854891,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "uuid" : "a6d2be09-cf83-4f06-840b-0eda7c26ef59",
    "configuration" : [ {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    } ],
    "ruleIssues" : null,
    "configIssues" : null
  },
  "libraryDefinitions" : null
}