{
  "pipelineConfig" : {
    "schemaVersion" : 6,
    "version" : 16,
    "pipelineId" : "TrainRandomForestRegressionModelScalaMLeapS3DB360102d4-1472-4fd5-9923-98c17a239e46",
    "title" : "TrainRandomForestRegressionModel-Scala-MLeap-S3-DB",
    "description" : "",
    "uuid" : "e63028fd-aade-4372-839a-b34d4c83a252",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "BATCH"
    }, {
      "name" : "edgeHttpUrl",
      "value" : "http://localhost:18633"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "testOriginStage",
      "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
    }, {
      "name" : "startEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "stopEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "badRecordsHandling",
      "value" : null
    }, {
      "name" : "errorRecordPolicy",
      "value" : "ORIGINAL_RECORD"
    }, {
      "name" : "workerCount",
      "value" : 0
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 2048
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "logLevel",
      "value" : "TRACE"
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 0
    }, {
      "name" : "maxRunners",
      "value" : 0
    }, {
      "name" : "shouldCreateFailureSnapshot",
      "value" : true
    }, {
      "name" : "runnerIdleTIme",
      "value" : 60
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    }, {
      "name" : "sparkConfigs",
      "value" : [ {
        "key" : "spark.driver.memory",
        "value" : "4G"
      }, {
        "key" : "spark.driver.cores",
        "value" : "1"
      }, {
        "key" : "spark.executor.memory",
        "value" : "4G"
      }, {
        "key" : "spark.executor.cores",
        "value" : "1"
      }, {
        "key" : "spark.executor.instances",
        "value" : "5"
      } ]
    }, {
      "name" : "clusterConfig.clusterType",
      "value" : "DATABRICKS"
    }, {
      "name" : "clusterConfig.sparkMasterUrl",
      "value" : "local[*]"
    }, {
      "name" : "clusterConfig.deployMode",
      "value" : "CLIENT"
    }, {
      "name" : "clusterConfig.hadoopUserName",
      "value" : null
    }, {
      "name" : "clusterConfig.sparkAppName",
      "value" : "${pipeline:title()}"
    }, {
      "name" : "clusterConfig.stagingDir",
      "value" : "/streamsets"
    }, {
      "name" : "clusterConfig.useYarnKerberosKeytab",
      "value" : false
    }, {
      "name" : "clusterConfig.yarnKerberosKeytabSource",
      "value" : "PROPERTIES_FILE"
    }, {
      "name" : "clusterConfig.yarnKerberosKeytab",
      "value" : null
    }, {
      "name" : "clusterConfig.yarnKerberosPrincipal",
      "value" : "name@DOMAIN"
    }, {
      "name" : "databricksConfig.baseUrl",
      "value" : "https://dbc-58107af9-cc2b.cloud.databricks.com"
    }, {
      "name" : "databricksConfig.credentialType",
      "value" : "TOKEN"
    }, {
      "name" : "databricksConfig.username",
      "value" : null
    }, {
      "name" : "databricksConfig.password",
      "value" : null
    }, {
      "name" : "databricksConfig.token",
      "value" : "dapie59d7245d87c6e96da11a8ea5e4d3aa3"
    }, {
      "name" : "databricksConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "databricksConfig.clusterId",
      "value" : "1001-183617-harm779"
    }, {
      "name" : "databricksConfig.clusterConfig",
      "value" : "{\n    \"num_workers\": 1,\n    \"spark_version\": \"5.3.x-scala2.11\",\n    \"spark_conf\": {},\n    \"node_type_id\": \"Standard_DS3_v2\",\n    \"ssh_public_keys\": [],\n    \"custom_tags\": {},\n    \"spark_env_vars\": {\n        \"PYSPARK_PYTHON\": \"/databricks/python3/bin/python3\"\n    },\n    \"enable_elastic_disk\": true\n}"
    }, {
      "name" : "databricksConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "livyConfig.baseUrl",
      "value" : "https://localhost:30443/gateway/default/livy/v1/"
    }, {
      "name" : "livyConfig.username",
      "value" : null
    }, {
      "name" : "livyConfig.password",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.accessKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.secretKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.enableEMRDebugging",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "amazonEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "advancedErrorHandling",
      "value" : false
    }, {
      "name" : "ludicrousMode",
      "value" : false
    }, {
      "name" : "ludicrousMode",
      "value" : false
    }, {
      "name" : "ludicrousModeInputCount",
      "value" : false
    }, {
      "name" : "advancedErrorHandling",
      "value" : false
    }, {
      "name" : "triggerInterval",
      "value" : 2000
    }, {
      "name" : "preprocessScript",
      "value" : ""
    }, {
      "name" : "statsAggregatorStage",
      "value" : ""
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 120000,
        "writeToDestinations" : false,
        "executeLifecycleEvents" : false,
        "showHeader" : false,
        "showFieldType" : true,
        "rememberMe" : true,
        "endStage" : ""
      }
    },
    "fragments" : [ ],
    "stages" : [ {
      "instanceName" : "File_01",
      "library" : "streamsets-spark-file-lib",
      "stageName" : "com_streamsets_pipeline_spark_origin_fs_FileDOrigin",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "configBean.fileNamePattern",
        "value" : "Advertising_training.csv"
      }, {
        "name" : "configBean.fileNameExcludePattern",
        "value" : null
      }, {
        "name" : "configBean.batchNumFileLimit",
        "value" : 0
      }, {
        "name" : "configBean.schemaConfigBean.schemaMode",
        "value" : "INFER"
      }, {
        "name" : "configBean.schemaConfigBean.customSchemaString",
        "value" : null
      }, {
        "name" : "configBean.schemaConfigBean.parseErrorMode",
        "value" : "PERMISSIVE"
      }, {
        "name" : "configBean.schemaConfigBean.columnNameOfCorruptRecord",
        "value" : null
      }, {
        "name" : "configBean.postProcessType",
        "value" : "NONE"
      }, {
        "name" : "configBean.archiveDir",
        "value" : null
      }, {
        "name" : "configBean.dataFormatConfig.csvHeader",
        "value" : true
      }, {
        "name" : "configBean.dataFormatConfig.csvDelimiter",
        "value" : ","
      }, {
        "name" : "configBean.dataFormatConfig.csvQuote",
        "value" : "\""
      }, {
        "name" : "configBean.dataFormatConfig.csvEscape",
        "value" : "\\"
      }, {
        "name" : "configBean.path",
        "value" : "/FileStore/tables/"
      }, {
        "name" : "configBean.dataFormat",
        "value" : "CSV"
      }, {
        "name" : "configBean.hdfsProperties",
        "value" : [ { } ]
      }, {
        "name" : "noReload",
        "value" : true
      }, {
        "name" : "cache",
        "value" : true
      }, {
        "name" : "configBean.dataFormatConfig.rootTag",
        "value" : null
      }, {
        "name" : "configBean.dataFormatConfig.rowTag",
        "value" : null
      }, {
        "name" : "skipOffsetTracking",
        "value" : false
      }, {
        "name" : "configBean.dataFormatConfig.multiLineJson",
        "value" : false
      }, {
        "name" : "configBean.dataFormatConfig.avroIgnoreExtension",
        "value" : true
      }, {
        "name" : "configBean.dataFormatConfig.avroSchema",
        "value" : null
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Load Training Data",
        "xPos" : 60,
        "yPos" : 50,
        "stageType" : "SOURCE"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "File_01OutputLane15602958757160" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "FieldRenamer_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_fieldrenamer_FieldRenamerDTransform",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "conf.rules",
        "value" : [ {
          "renameType" : "SIMPLE_REPLACE",
          "caseInsensitive" : false,
          "field" : "_c1",
          "replacement" : "TV"
        }, {
          "renameType" : "SIMPLE_REPLACE",
          "caseInsensitive" : false,
          "field" : "_c2",
          "replacement" : "Radio"
        }, {
          "renameType" : "SIMPLE_REPLACE",
          "caseInsensitive" : false,
          "field" : "_c3",
          "replacement" : "Newspaper"
        }, {
          "renameType" : "SIMPLE_REPLACE",
          "caseInsensitive" : false,
          "field" : "_c4",
          "replacement" : "label"
        } ]
      }, {
        "name" : "cache",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "edit.png",
        "description" : "",
        "label" : "Rename Features and Label",
        "xPos" : 280
      },
      "inputLanes" : [ "File_01OutputLane15602958757160" ],
      "outputLanes" : [ "FieldRenamer_01OutputLane15681361668840" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "Scala_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_scala_ScalaDTransform",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "code",
        "value" : "import spark.implicits._\nimport scala.collection.mutable.Buffer\n\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.regression.{RandomForestRegressionModel, RandomForestRegressor}\nimport org.apache.spark.ml.tuning.{CrossValidator, ParamGridBuilder}\n\nval features = Array(\"TV\", \"Radio\", \"Newspaper\")\nval trainSplit = 80\nval testSplit = 20\nval numberOfTrees = 30\nval numberOfCVFolds = 3\nval treeDepth = 3\n\nvar df = inputs(0)\n\n// MUST for Spark features\nval assembler = new VectorAssembler().setInputCols(features).setOutputCol(\"features\")\n\n// Transform features\ndf = assembler.transform(df)\n\n// Split dataset into \"train\" and \"test\" sets\nval Array(train, test) = df.randomSplit(Array(trainSplit, testSplit), 42)\n\n// Create RandomForestRegressor instance with hyperparameters \"number of trees\" and \"tree depth\"\n// NOTE: In production, hyperparameters should be tuned to create more accurate models.\nval rf = new RandomForestRegressor().setNumTrees(numberOfTrees).setMaxDepth(treeDepth)\n\n// Setup pipeline\nval pipeline = new Pipeline().setStages(Array(rf))\n\n// Setup hyperparams grid\nval paramGrid = new ParamGridBuilder().build()\n\n// Setup model evaluators\n// Note: By default, it will show how many units off in the same scale as the target -- RMSE\nval rmseEvaluator  = new RegressionEvaluator() \n\n// Select R2 as our main scoring metric\nval r2Evaluator  = new RegressionEvaluator().setMetricName(\"r2\") \n\n// Setup cross validator\nval cv = new CrossValidator().setNumFolds(numberOfCVFolds).setEstimator(pipeline).setEstimatorParamMaps(paramGrid).setEvaluator(r2Evaluator)\n\n// Fit model on \"train\" set\nval cvModel = cv.fit(train)\n\n// Get the best model based on CrossValidator\nval model = cvModel.bestModel.asInstanceOf[PipelineModel]\n\n// Run inference on \"test\" set\nval predictions = model.transform(test)\nval rmse = rmseEvaluator.evaluate(predictions)\nval r2 = r2Evaluator.evaluate(predictions)\n\n// Create MLeap Bundle and store the bundle in temporary location\nimport ml.combust.bundle._\nimport ml.combust.mleap.spark.SparkSupport._\nimport org.apache.spark.ml.bundle.SparkBundleContext\n\nval saveModelZipPath = \"/dbfs/ml/model.zip\"\nval bundle = BundleFile(\"jar:file:\" + saveModelZipPath)\nval context = SparkBundleContext().withDataset(predictions)\n\ntry {\n  model.writeBundle.save(bundle)(context).get\n} finally {\n  bundle.close()\n}\n\n// Return R2 and RMSE as output dataframe\noutput = spark.createDataFrame(spark.sparkContext.parallelize(Seq((rmse, r2))))\noutput = output.withColumnRenamed(\"_1\", \"RMSE\").withColumnRenamed(\"_2\",\"R2\")"
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "scala-spiral.png",
        "description" : "",
        "label" : "Train RandomForest Regressor Model",
        "xPos" : 500
      },
      "inputLanes" : [ "FieldRenamer_01OutputLane15681361668840" ],
      "outputLanes" : [ "Scala_01OutputLane15669466920700" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "StreamSelector_01",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_selector_SelectorDTransform",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "lanePredicates",
        "value" : [ {
          "outputLane" : "StreamSelector_01OutputLane1568309498652",
          "predicate" : "R2 < 0.75"
        }, {
          "outputLane" : "StreamSelector_01OutputLane1568305603282",
          "predicate" : "default"
        } ]
      }, {
        "name" : "cache",
        "value" : false
      } ],
      "uiInfo" : {
        "yPos" : 116,
        "stageType" : "PROCESSOR",
        "icon" : "laneSelector.png",
        "description" : "",
        "label" : "Accuracy Threshold",
        "xPos" : 720
      },
      "inputLanes" : [ "Scala_01OutputLane15669466920700" ],
      "outputLanes" : [ "StreamSelector_01OutputLane1568309498652", "StreamSelector_01OutputLane1568305603282" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "File_02",
      "library" : "streamsets-spark-file-lib",
      "stageName" : "com_streamsets_pipeline_spark_destination_fs_FileWriterDDestination",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "configBean.writeMode",
        "value" : "APPEND"
      }, {
        "name" : "configBean.fieldToWrite",
        "value" : null
      }, {
        "name" : "configBean.partitionByColumns",
        "value" : [ ]
      }, {
        "name" : "configBean.filterUnrelatedScdMasterRecords",
        "value" : false
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvHeader",
        "value" : true
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvDelimiter",
        "value" : ","
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvQuote",
        "value" : "\""
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvEscape",
        "value" : "\\"
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.rootTag",
        "value" : "ROWS"
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.rowTag",
        "value" : "ROW"
      }, {
        "name" : "configBean.path",
        "value" : "/FileStore/tmp"
      }, {
        "name" : "configBean.dataFormat",
        "value" : "CSV"
      }, {
        "name" : "configBean.hdfsProperties",
        "value" : [ { } ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Capture R2 & RMSE",
        "xPos" : 940,
        "yPos" : 170,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ "StreamSelector_01OutputLane1568305603282" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "Scala_02",
      "library" : "streamsets-spark-basic-lib",
      "stageName" : "com_streamsets_pipeline_spark_transform_scala_ScalaDTransform",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "code",
        "value" : "import spark.implicits._\nimport scala.collection.mutable.Buffer\n\n// Upload MLeap Bundle model to S3\nimport com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.auth.BasicAWSCredentials\nimport java.io.File \n\nval saveModelZipPath = \"/dbfs/ml/model.zip\"\nval bucketName = \"dash-streamsets\"\nval accessKey = \"AKIAIBEJDP3VXO6ULV6Q\"\nval accessSecret = \"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\"\nval fileToUpload = new File(saveModelZipPath)\n\nval awsCredentials = new BasicAWSCredentials(accessKey, accessSecret)\nval amazonS3Client = new AmazonS3Client(awsCredentials)\n\namazonS3Client.putObject(bucketName, \"model.zip\", fileToUpload)\n\n// Return success\noutput = inputs(0)"
      } ],
      "uiInfo" : {
        "yPos" : 40,
        "stageType" : "PROCESSOR",
        "icon" : "scala-spiral.png",
        "description" : "",
        "label" : "Upload Model to S3",
        "xPos" : 940
      },
      "inputLanes" : [ "StreamSelector_01OutputLane1568309498652" ],
      "outputLanes" : [ "Scala_02OutputLane15683116051060" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "File_03",
      "library" : "streamsets-spark-file-lib",
      "stageName" : "com_streamsets_pipeline_spark_destination_fs_FileWriterDDestination",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "configBean.writeMode",
        "value" : "APPEND"
      }, {
        "name" : "configBean.fieldToWrite",
        "value" : null
      }, {
        "name" : "configBean.partitionByColumns",
        "value" : [ ]
      }, {
        "name" : "configBean.filterUnrelatedScdMasterRecords",
        "value" : false
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvHeader",
        "value" : true
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvDelimiter",
        "value" : ","
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvQuote",
        "value" : "\""
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.csvEscape",
        "value" : "\\"
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.rootTag",
        "value" : "ROWS"
      }, {
        "name" : "configBean.dataGeneratorFormatConfig.rowTag",
        "value" : "ROW"
      }, {
        "name" : "configBean.path",
        "value" : "/FileStore/tmp"
      }, {
        "name" : "configBean.dataFormat",
        "value" : "CSV"
      }, {
        "name" : "configBean.hdfsProperties",
        "value" : [ { } ]
      } ],
      "uiInfo" : {
        "yPos" : 40,
        "stageType" : "TARGET",
        "icon" : "directory.png",
        "description" : "",
        "label" : "Success",
        "xPos" : 1160
      },
      "inputLanes" : [ "Scala_02OutputLane15683116051060" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "errorStage" : null,
    "info" : {
      "pipelineId" : "TrainRandomForestRegressionModelScalaMLeapS3DB360102d4-1472-4fd5-9923-98c17a239e46",
      "title" : "TrainRandomForestRegressionModel-Scala-MLeap-S3-DB",
      "description" : "",
      "created" : 1570467020339,
      "lastModified" : 1570467020353,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "e63028fd-aade-4372-839a-b34d4c83a252",
      "valid" : true,
      "metadata" : {
        "labels" : [ ]
      },
      "name" : "TrainRandomForestRegressionModelScalaMLeapS3DB360102d4-1472-4fd5-9923-98c17a239e46",
      "sdcVersion" : "3.12.0-SNAPSHOT",
      "sdcId" : "32664848-e7c8-11e9-8e5c-bd27fc4173b1"
    },
    "metadata" : {
      "labels" : [ ]
    },
    "statsAggregatorStage" : null,
    "startEventStages" : [ ],
    "stopEventStages" : [ ],
    "testOriginStage" : null,
    "valid" : true,
    "issues" : {
      "pipelineIssues" : [ ],
      "stageIssues" : { },
      "issueCount" : 0
    },
    "previewable" : false
  },
  "pipelineRules" : {
    "schemaVersion" : 3,
    "version" : 2,
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Error Records",
      "metricId" : "pipeline.batchErrorRecords.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1560198764297,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Stage Errors",
      "metricId" : "pipeline.batchErrorMessages.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1560198764297,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1560198764297,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1560198764297,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "uuid" : "5de3d8e9-02aa-43d6-98b7-5de18ed403ae",
    "configuration" : [ {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    } ],
    "ruleIssues" : null,
    "configIssues" : null
  },
  "libraryDefinitions" : null
}